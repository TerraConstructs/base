// ~~ Generated by projen. To modify, edit .projenrc.ts and run "npx projen".
import type { FileProvisioner, IResolvable, ITerraformDependable, ITerraformIterator, LocalExecProvisioner, RemoteExecProvisioner, SSHProvisionerConnection, TerraformCount, TerraformProvider, TerraformResourceLifecycle, WinrmProvisionerConnection } from 'cdktf';
import type { CorsRuleConfig } from './';

/**
 * Provides an S3 bucket CORS configuration resource.
 *
 * For more information about CORS, go to
 * [Enabling Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/userguide/cors.html)
 * in the Amazon S3 User Guide.
 */
export interface CorsConfig {
  /**
   * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/aws/5.68.0/docs/resources/s3_bucket_cors_configuration#id S3BucketCorsConfiguration#id}.
   * Please be aware that the id field is automatically added to all resources in Terraform providers using a Terraform provider SDK version below 2.
   * If you experience problems setting this value it might not be settable. Please take a look at the provider documentation to ensure it should be settable.
   * @stability stable
   */
  readonly id?: string;
  /**
   * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/aws/5.68.0/docs/resources/s3_bucket_cors_configuration#expected_bucket_owner S3BucketCorsConfiguration#expected_bucket_owner}.
   * @stability stable
   */
  readonly expectedBucketOwner?: string;
  /**
   * A set of origins and methods (cross-origin access that you want to allow).
   * Docs at Terraform Registry: {@link https://registry.terraform.io/providers/hashicorp/aws/5.68.0/docs/resources/s3_bucket_cors_configuration#cors_rule S3BucketCorsConfiguration#cors_rule}
   * @stability stable
   */
  readonly corsRule: IResolvable | Array<CorsRuleConfig>;
  /**
   * @stability experimental
   */
  readonly provisioners?: Array<FileProvisioner | LocalExecProvisioner | RemoteExecProvisioner>;
  /**
   * @stability experimental
   */
  readonly provider?: TerraformProvider;
  /**
   * @stability experimental
   */
  readonly lifecycle?: TerraformResourceLifecycle;
  /**
   * @stability experimental
   */
  readonly forEach?: ITerraformIterator;
  /**
   * @stability experimental
   */
  readonly dependsOn?: Array<ITerraformDependable>;
  /**
   * @stability experimental
   */
  readonly count?: number | TerraformCount;
  /**
   * @stability experimental
   */
  readonly connection?: SSHProvisionerConnection | WinrmProvisionerConnection;
}
